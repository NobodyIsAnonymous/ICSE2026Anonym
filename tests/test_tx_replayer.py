from tx_replayer import Replayer
import json
from new_function_name_cluster import read_data
from dtw_similarity import load_data

clusters, remaining_non_cluster, unique_non_cluster, model, centroids = read_data('data_rules_related/final_classified_functions.csv')
trace_rules_df = load_data('data_rules_related/noloop_encoded_trace.csv')
replayer = Replayer(transaction_file='dune_tx/es-data/new_dune_results_*_100k_*.csv')

# def test_match_tx_trace():
#     tx_hash = "0x41a48c815a4958e53df17609d5212e133d7bcf5d626666da6feca3b0a06fb6fe"
#     result = replayer.match_tx_trace(tx_hash)
    
def test_eliminate_static_calls():
    tx_hash = "0x41a48c815a4958e53df17609d5212e133d7bcf5d626666da6feca3b0a06fb6fe"
    type_vector = [250, 250, 241, 241, 241, 241, 250, 250, 241, 241, 250, 250, 241]
    address_vector = ['0xe304af407e07465d0a859de9f38324099c9b3a93', '0x2a79a0e0c226a58eeb99c5704d72d49177cc7516', '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', '0x2a79a0e0c226a58eeb99c5704d72d49177cc7516', '0x7a5d3a9dcd33cb8d527f7b5f96eb4fef43d55636', '0x7a5d3a9dcd33cb8d527f7b5f96eb4fef43d55636', '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', '0xe304af407e07465d0a859de9f38324099c9b3a93', '0x1959ab0459b18bb704626cdc22a1c1d8786b4020', '0x1959ab0459b18bb704626cdc22a1c1d8786b4020', '0x7a5d3a9dcd33cb8d527f7b5f96eb4fef43d55636', '0x7b9e4a8067ec3a8b0acbd563ceaa69f8779f31fe']
    function_name_vector = ['getReserves', 'getReserves', 'deposit', 'transfer', 'swap', 'transfer', 'UseByInt9298f4e45ec', 'UseByInt9298f4e45ec', 'swap', 'transfer', 'UseByInt9298f4e45ec', 'UseByInt9298f4e45ec', 'Unknown']
    function_params_vector = ['0x', '0x', '0x', '0x0000000000000000000000002a79a0e0c226a58eeb99c5704d72d49177cc751600000000000000000000000000000000000000000000000001869b0fcd3fe54f', '0x000000000000000000000000000000000000000000000196048ea56df347f88e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e304af407e07465d0a859de9f38324099c9b3a9300000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000', '0x000000000000000000000000e304af407e07465d0a859de9f38324099c9b3a93000000000000000000000000000000000000000000000196048ea56df347f88e', '0x0000000000000000000000002a79a0e0c226a58eeb99c5704d72d49177cc7516', '0x0000000000000000000000002a79a0e0c226a58eeb99c5704d72d49177cc7516', '0x00000000000000000000000000000000000000000004a1d89bb94865ec00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007b9e4a8067ec3a8b0acbd563ceaa69f8779f31fe00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000', '0x0000000000000000000000007b9e4a8067ec3a8b0acbd563ceaa69f8779f31fe00000000000000000000000000000000000000000004a1d89bb94865ec000000', '0x000000000000000000000000e304af407e07465d0a859de9f38324099c9b3a93', '0x000000000000000000000000e304af407e07465d0a859de9f38324099c9b3a93', '0x']
    result = Replayer.eliminate_static_calls(type_vector, address_vector, function_name_vector, function_params_vector)
    assert result[1] == ['deposit', 'transfer', 'swap', 'transfer', 'swap', 'transfer', 'Unknown']
    assert len(result[0]) == len(result[1])
    assert len(result[0]) == len(result[2])